[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "boardwalk"
requires-python = ">=3.11"

# -- Package and dependencies, configured with Poetry -------------------------
# https://python-poetry.org/docs/

[tool.poetry]
name = "boardwalk"
version = "0.8.25"
description = "Boardwalk is a linear Ansible workflow engine"
readme = "README.md"
authors = [
    "Mat Hornbeek <84995001+m4wh6k@users.noreply.github.com>",
]
maintainers = [
    "Alex Sullivan (Backblaze, Inc.) <115666116+asullivan-blze@users.noreply.github.com>",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS"
]
repository = "https://github.com/Backblaze/boardwalk"
packages = [
    { include = "boardwalk", from = "src" },
    { include = "boardwalkd", from = "src" }
]
include = [
    { path = "py.typed" },
    { path = "static/*.css" },
    { path = "static/*.js"},
    { path = "templates/*.html"}
]

[tool.poetry.urls]
"Issues" = "https://github.com/Backblaze/boardwalk/issues"

[tool.poetry.dependencies]
aiohttp = "^3.12.12"                 # Required by slack-bolt's AsyncApp
ansible-runner = ">=2.3.0"
click = ">=8.1.3"
cryptography = ">=38.0.3"
email-validator = ">=1.3.0"         # Required by pydantic to validate emails using EmailStr
loguru = "^0.7.3"
pydantic = ">=2.4.2"
python = ">=3.11,<4"
slack-bolt = "^1.21.3"
tornado = ">=6.4.2"


[tool.poetry.group.dev.dependencies]
anyio = "^4.7.0"
pyright = "==1.1.350"
pytest = "^8.3.4"
ruff = "^0.11.13"
semgrep = ">=1.92.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
rich-click = "^1.8.5"
sphinx = "^8.1.3"
sphinx-book-theme = "^1.1.3"
myst-parser = {extras = ["linkify"], version = "^4.0.0"}
sphinx-autobuild = "^2024.10.3"
sphinx-autodoc2 = "^0.5.0"
sphinx-copybutton = "^0.5.2"

[tool.poetry.scripts]
boardwalk = "boardwalk.cli:cli"
boardwalkd = "boardwalkd.cli:cli"

[tool.pytest.ini_options]
filterwarnings = [
    # Not entirely concerned about Pydantic warnings at the moment.
    'ignore:::pydantic.*:',
]

# -- Configuration for Ruff ---------------------------------------------------
# https://docs.astral.sh/ruff/

[tool.ruff]
line-length = 120
extend-exclude = [
    "typings/*",
]
lint.extend-select = [
    "I",            # isort (import sorting)
    "W",            # pycodestyle warnings
    "UP",           # pyupgrade
    "DTZ",          # flake8-datetimez
]

# -- Typechecking (currently pyright) -----------------------------------------
[tool.pyright]
exclude = [
    "build/",
    "dist/",
    "typings/",
]
pythonPlatform = "All"
reportImportCycles = false
reportMissingTypeStubs = false
# Use basic type-checking for now, until strict type checking can be fixed again
typeCheckingMode = "basic"
