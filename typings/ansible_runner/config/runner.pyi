"""
This type stub file was generated by pyright.
"""

from ansible_runner.config._base import BaseConfig

logger = ...

class ExecutionMode:
    NONE = ...
    ANSIBLE = ...
    ANSIBLE_PLAYBOOK = ...
    RAW = ...

class RunnerConfig(BaseConfig):
    """
    A ``Runner`` configuration object that's meant to encapsulate the configuration used by the
    :py:mod:`ansible_runner.runner.Runner` object to launch and manage the invocation of ``ansible``
    and ``ansible-playbook``

    Typically this object is initialized for you when using the standard ``run`` interfaces in :py:mod:`ansible_runner.interface`
    but can be used to construct the ``Runner`` configuration to be invoked elsewhere. It can also be overridden to provide different
    functionality to the Runner object.

    :Example:

    >>> rc = RunnerConfig(...)
    >>> r = Runner(config=rc)
    >>> r.run()

    """

    def __init__(
        self,
        private_data_dir,
        playbook=...,
        inventory=...,
        roles_path=...,
        limit=...,
        module=...,
        module_args=...,
        verbosity=...,
        host_pattern=...,
        binary=...,
        extravars=...,
        suppress_output_file=...,
        suppress_ansible_output=...,
        process_isolation_path=...,
        process_isolation_hide_paths=...,
        process_isolation_show_paths=...,
        process_isolation_ro_paths=...,
        tags=...,
        skip_tags=...,
        directory_isolation_base_path=...,
        forks=...,
        cmdline=...,
        omit_event_data=...,
        only_failed_event_data=...,
        **kwargs,
    ) -> None: ...
    @property
    def sandboxed(self): ...
    def prepare(self):  # -> None:
        """
        Performs basic checks and then properly invokes

        - prepare_inventory
        - prepare_env
        - prepare_command

        It's also responsible for wrapping the command with the proper ssh agent invocation
        and setting early ANSIBLE_ environment variables.
        """
        ...

    def prepare_inventory(self):  # -> None:
        """
        Prepares the inventory default under ``private_data_dir`` if it's not overridden by the constructor.
        """
        ...

    def prepare_env(self):  # -> None:
        """
        Manages reading environment metadata files under ``private_data_dir`` and merging/updating
        with existing values so the :py:class:`ansible_runner.runner.Runner` object can read and use them easily
        """
        ...

    def prepare_command(self): ...
    def generate_ansible_command(self):  # -> list[Unknown | str]:
        """
        Given that the ``RunnerConfig`` preparation methods have been run to gather the inputs this method
        will generate the ``ansible`` or ``ansible-playbook`` command that will be used by the
        :py:class:`ansible_runner.runner.Runner` object to start the process
        """
        ...

    def build_process_isolation_temp_dir(self):  # -> str:
        """
        Create a temporary directory for process isolation to use.
        """
        ...

    def wrap_args_for_sandbox(self, args):  # -> list[Unknown | str | Any]:
        """
        Wrap existing command line with bwrap to restrict access to:
         - self.process_isolation_path (generally, /tmp) (except for own /tmp files)
        """
        ...
