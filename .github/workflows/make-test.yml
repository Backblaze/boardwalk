---
name: Run Boardwalk test suites

on:
  workflow_dispatch:
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  make-test:
    runs-on: ubuntu-latest

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.11'

      #----------------------------------------------
      # Install and configure Poetry, or restore from cache
      #----------------------------------------------
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4.1.2
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache
      
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4.1.2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      
      #----------------------------------------------
      #       Add Ansible for type checking
      #----------------------------------------------
      # If we need to add this for the replacement typechecker, uncomment this.
      # - run: poetry add ansible --no-interaction

      #----------------------------------------------
      #              run test suites
      #----------------------------------------------
      # Run pytest
      - run: make test-pytest

      # Check code formatting and import sorting
      - run: make test-ruff

      # Commented out because we're planning on switching to a different static
      # typechecker, and frankly whatever is taking pyright _minutes_ to run is
      # a little excessive, for now.
      # - run: make test-pyright
