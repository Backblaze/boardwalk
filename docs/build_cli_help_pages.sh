#!/bin/bash

# TODO / Possibility: Integrate rich-click into boardwalk/boardwalkd directly,
# so this workaround isn't needed to generate a pretty help text.

commands=(
    "boardwalk"
    "boardwalk catch"
    "boardwalk check"
    "boardwalk init"
    "boardwalk login"
    "boardwalk release"
    "boardwalk run"
    "boardwalk version"
    "boardwalk workspace"
    "boardwalk workspace dump"
    "boardwalk workspace list"
    "boardwalk workspace reset"
    "boardwalk workspace show"
    "boardwalk workspace use"

    "boardwalkd"
    "boardwalkd serve"
    "boardwalkd version"
)

OUTPUT_WIDTH_COLUMMNS=110

GET_PAGE_NAME() {
    echo '`'"$1"'`'
}

AUTO_GEN_DIR=source/_autogenerated/cli_helpdocs
mkdir -p "$AUTO_GEN_DIR"
mkdir -p "$AUTO_GEN_DIR/boardwalk"
mkdir -p "$AUTO_GEN_DIR/boardwalkd"

echo "[+] Beginning CLI help documentation generation..."
STATUS=0
for cmd in "${commands[@]}"; do
    test="$(echo "$cmd" | cut -d ' ' -f 1)"
    if [[ $test == "boardwalk" ]]; then
        SUBDIR=boardwalk
    elif [[ $test == "boardwalkd" ]]; then
        SUBDIR=boardwalkd
    else
        # Don't assume if we cannot correctly parse the command being generated
        echo "[?] Skipping generation for $cmd; is this a boardwalk or boardwalkd command?"
        STATUS=1
        continue
    fi
    FILENAME=$AUTO_GEN_DIR/$SUBDIR/$(echo "$cmd" | tr ' ' _).md
    echo "  [.] $cmd ..."
    touch "$FILENAME"
    {
        echo "# $(GET_PAGE_NAME "$cmd")"
        echo ""
        echo '<div class="full-width" id="cmd-help-text">'
        echo '<pre>'
        # shellcheck disable=SC2086  # We actually want word splitting, here
        COLUMNS=$OUTPUT_WIDTH_COLUMMNS rich-click --output html $cmd --help
        echo '</pre>'
        echo '</div>'
        echo ''
    }  > "$FILENAME"
    echo "    [>] saved @ $FILENAME"
done

if [[ $STATUS -eq 0 ]]; then
    echo "[=] CLI help generation complete"
else
    echo "[x] Error during CLI help generation"
fi

exit $STATUS
